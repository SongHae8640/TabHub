SET SESSION FOREIGN_KEY_CHECKS=0;

/* Drop Tables */

DROP TABLE IF EXISTS COMMENT_REPORT;
DROP TABLE IF EXISTS LIKE_HATE_FOR_COMMENT;
DROP TABLE IF EXISTS COMMENT;
DROP TABLE IF EXISTS LIKE_HATE_FOR_UTG;
DROP TABLE IF EXISTS SENT_TAB;
DROP TABLE IF EXISTS SENT_TG;
DROP TABLE IF EXISTS SYNC_TAB;
DROP TABLE IF EXISTS SYNC_TG;
DROP TABLE IF EXISTS UPLOADED_REPORT;
DROP TABLE IF EXISTS UPLOADED_TAB;
DROP TABLE IF EXISTS UPLOADED_TG;
DROP TABLE IF EXISTS ACCOUNT;




/* Create Tables */

CREATE TABLE ACCOUNT
(
	ID varchar(30) NOT NULL,
	EMAIL varchar(50),
	PASSWORD varchar(50),
	PROFILE_URL text,
	PRIMARY KEY (ID),
	ROLE varchar(30),
	UNIQUE (EMAIL)
);


CREATE TABLE COMMENT
(
	ID bigint unsigned NOT NULL AUTO_INCREMENT,
	UTG_ID bigint unsigned NOT NULL,
	-- ACCOUNT's ID. 
	WRITER_ID varchar(30) NOT NULL COMMENT 'ACCOUNT''s ID. ',
	LIKE_COUNT bigint unsigned DEFAULT 0,
	HATE_COUNT bigint unsigned DEFAULT 0,
	REFFERENCE_ID varchar(30),
	WRITE_DATE timestamp DEFAULT NOW() NOT NULL,
	PRIMARY KEY (ID)
);


CREATE TABLE COMMENT_REPORT
(
	COMMENT_ID bigint unsigned NOT NULL,
	ACCOUNT_ID varchar(30) NOT NULL,
	CONTENT text
);


CREATE TABLE LIKE_HATE_FOR_COMMENT
(
	COMMENT_ID bigint unsigned NOT NULL,
	ACCOUNT_ID varchar(30) NOT NULL,
	-- 1 is like, 0 is hate
	IS_LIKE tinyint COMMENT '1 is like, 0 is hate',
	PRIMARY KEY (COMMENT_ID, ACCOUNT_ID)
);


CREATE TABLE LIKE_HATE_FOR_UTG
(
	ACCOUNT_ID varchar(30) NOT NULL,
	UTG_ID bigint unsigned NOT NULL,
	-- 1 is like, 0 is hate
	IS_LIKE tinyint COMMENT '1 is like, 0 is hate',
	PRIMARY KEY (ACCOUNT_ID, UTG_ID)
);


CREATE TABLE SENT_TAB
(
	SENT_ID bigint NOT NULL,
	TITLE text,
	URL text NOT NULL
);


CREATE TABLE SENT_TG
(
	ID bigint NOT NULL AUTO_INCREMENT,
	SENDER_ID varchar(30) NOT NULL,
	RECEIVER_ID varchar(30) NOT NULL,
	-- 1 is checked, 0 is not checked
	IS_CHECK tinyint COMMENT '1 is checked, 0 is not checked',
	PRIMARY KEY (ID)
);


CREATE TABLE SYNC_TAB
(
	SYNC_ID bigint unsigned NOT NULL,
	TITLE text,
	URL text NOT NULL
);


CREATE TABLE SYNC_TG
(
	ID bigint unsigned NOT NULL AUTO_INCREMENT,
	ACCOUNT_ID varchar(30) NOT NULL,
	CATEGORY varchar(30),
	PRIMARY KEY (ID)
);


CREATE TABLE UPLOADED_REPORT
(
	UTG_ID bigint unsigned NOT NULL,
	ACCOUNT_ID varchar(30) NOT NULL,
	CONTENT text
);


CREATE TABLE UPLOADED_TAB
(
	UTG_ID bigint unsigned NOT NULL,
	TITLE text,
	URL text NOT NULL,
	CLICK_COUNT bigint unsigned DEFAULT 0
);


CREATE TABLE UPLOADED_TG
(
	ID bigint unsigned NOT NULL AUTO_INCREMENT,
	WRITER varchar(30) NOT NULL,
	TITLE varchar(100) NOT NULL,
	CONTENT text,
	LIKE_COUNT bigint unsigned,
	HATE_COUNT bigint unsigned,
	COMMENT_COUNT bigint unsigned,
	VIEW_COUNT bigint unsigned DEFAULT 0,
	DOWNLOAD_COUNT bigint unsigned,
	WRITE_DATE timestamp,
	PRIMARY KEY (ID)
);



/* Create Foreign Keys */

ALTER TABLE COMMENT
	ADD FOREIGN KEY (WRITER_ID)
	REFERENCES ACCOUNT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE COMMENT_REPORT
	ADD FOREIGN KEY (ACCOUNT_ID)
	REFERENCES ACCOUNT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE LIKE_HATE_FOR_COMMENT
	ADD FOREIGN KEY (ACCOUNT_ID)
	REFERENCES ACCOUNT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE LIKE_HATE_FOR_UTG
	ADD FOREIGN KEY (ACCOUNT_ID)
	REFERENCES ACCOUNT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE SENT_TG
	ADD FOREIGN KEY (RECEIVER_ID)
	REFERENCES ACCOUNT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE SENT_TG
	ADD FOREIGN KEY (SENDER_ID)
	REFERENCES ACCOUNT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE SYNC_TG
	ADD FOREIGN KEY (ACCOUNT_ID)
	REFERENCES ACCOUNT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE UPLOADED_REPORT
	ADD FOREIGN KEY (ACCOUNT_ID)
	REFERENCES ACCOUNT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE UPLOADED_TG
	ADD FOREIGN KEY (WRITER)
	REFERENCES ACCOUNT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE COMMENT_REPORT
	ADD FOREIGN KEY (COMMENT_ID)
	REFERENCES COMMENT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE LIKE_HATE_FOR_COMMENT
	ADD FOREIGN KEY (COMMENT_ID)
	REFERENCES COMMENT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE SENT_TAB
	ADD FOREIGN KEY (SENT_ID)
	REFERENCES SENT_TG (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE SYNC_TAB
	ADD FOREIGN KEY (SYNC_ID)
	REFERENCES SYNC_TG (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE COMMENT
	ADD FOREIGN KEY (UTG_ID)
	REFERENCES UPLOADED_TG (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE LIKE_HATE_FOR_UTG
	ADD FOREIGN KEY (UTG_ID)
	REFERENCES UPLOADED_TG (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE UPLOADED_REPORT
	ADD FOREIGN KEY (UTG_ID)
	REFERENCES UPLOADED_TG (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE UPLOADED_TAB
	ADD FOREIGN KEY (UTG_ID)
	REFERENCES UPLOADED_TG (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;



